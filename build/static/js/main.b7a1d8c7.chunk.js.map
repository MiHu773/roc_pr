{"version":3,"sources":["serviceWorker.js","component/DataInput.js","resources/exampleData.js","DataProcessor.js","component/Chart.js","component/ErrorMatrix.js","utils.js","component/TooltipButton.js","RocprDemo.js","component/Footer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","DataInput","props","state","inputs","columns","forEach","c","id","rows","this","newRow","enable","key","localeCompare","RegExp","regex","test","alert","display","Number","push","parentHandler","columnName","e","input","target","value","setState","i","splice","inputFields","Input","placeholder","onChange","handleChange","bind","length","rowData","j","columnID","Col","Row","className","Button","onClick","removeClicked","Container","InputGroup","InputGroupAddon","addonType","color","addRow","React","Component","rowsRes","result","rowsThresh","threshold","compareRoc","a","b","x","y","comparePr","ProcessedRow","TP","FP","TN","FN","parseFloat","recall","specifity","precision","dokladnosc","error","F1","processRows","results","thresholds","processedRows","Chart","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","type","name","xLabel","offset","position","yLabel","angle","labelFormatter","label","stroke","strokeWidth","formatFloat","val","isNaN","toFixed","ErrorMatrix","sort","row","content","map","renderRow","Table","compareRows","compareThreshold","compareResults","TooltipButton","useState","tooltipOpen","setTooltipOpen","children","Tooltip","placement","isOpen","toggle","tooltip","columnsRes","columnsThresh","RocprDemo","fillExampleOnClickHandler","rowsResults","ExampleData","rowsThresholds","clearAllOnClickHandler","sortOnClickHandler","resultsChangeHandler","thresholdsChangeHandler","genThresholdOnClickHandler","current","slice","rocData","sp","rc","filter","rpData","rawData","pr","prepareRpData","fluid","xs","size","md","xl","Footer","App","Jumbotron","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7a1d8c7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './DataInput.css';\r\nimport {Container, InputGroup, Input, InputGroupAddon, Button, Row, Col} from 'reactstrap';\r\n\r\nclass DataInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.inputs = {};\r\n        this.props.columns.forEach((c) => this.state.inputs[c.id] = '');\r\n    }\r\n\r\n    addRow() {\r\n        let rows = [...this.props.rows];\r\n        var newRow = {};\r\n        let enable = true;\r\n        for (let key in this.state.inputs) {\r\n            this.props.columns.forEach((c) => {\r\n                if (!c.id.localeCompare(key) == 0) return;\r\n                let re = new RegExp(c.regex);\r\n                if (!re.test(this.state.inputs[key])) {\r\n                    alert(\"Błąd danych wejściowych. Kolumna: \" + c.display + \" powinna spełniać: \" + c.regex);\r\n                    enable = false;\r\n                }\r\n            });\r\n            newRow[key] = Number(this.state.inputs[key]);\r\n        }\r\n        if (!enable) return;\r\n        rows.push(newRow);\r\n        this.props.parentHandler(rows);\r\n    }\r\n\r\n    handleChange(columnName, e) {\r\n        let input = this.state.inputs;\r\n        input[columnName] = e.target.value;\r\n        this.setState({inputs: input});\r\n    }\r\n\r\n    removeClicked(i) {\r\n        let rows = [...this.props.rows];\r\n        rows.splice(i, 1);\r\n        this.props.parentHandler(rows);\r\n    }\r\n\r\n    render() {\r\n        let inputFields = [];\r\n        let rows = [];\r\n        this.props.columns.forEach((c) => {\r\n            inputFields.push(<Input key={c.id} placeholder={c.display} onChange={this.handleChange.bind(this, c.id)}/>)\r\n        });\r\n\r\n        for (let i = 0; i < this.props.rows.length; i++) {\r\n            let rowData = [];\r\n            for (let j = 0; j < this.props.columns.length; j++) {\r\n                let columnID = this.props.columns[j].id;\r\n                rowData.push(<Col>{this.props.rows[i][columnID]}</Col>)\r\n            }\r\n            rows.push(\r\n                <Row className=\"justify-content-between row-data align-items-center\">\r\n                    {rowData}\r\n                    <Col>\r\n                        <Button className=\"btn-remove\" onClick={this.removeClicked.bind(this, i)}>X</Button>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n\r\n        }\r\n        return (\r\n            <Container className=\"mb-10\">\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup>\r\n                            {inputFields}\r\n                            <InputGroupAddon addonType=\"append\">\r\n                                <Button color='success' onClick={this.addRow.bind(this)}>+</Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"data-container\">\r\n                    {rows}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DataInput","\r\nconst rowsRes = [\r\n    { state: 0, result: 0.1 },\r\n    { state: 1, result: 0.4 },\r\n    { state: 1, result: 0.9 },\r\n    { state: 1, result: 0.9 },\r\n    { state: 1, result: 0.8 },\r\n    { state: 1, result: 0.7 },\r\n    { state: 0, result: 0.6 },\r\n    { state: 0, result: 0.6 },\r\n    { state: 0, result: 0.3 },\r\n    { state: 0, result: 0.2 }\r\n];\r\n\r\nconst rowsThresh = [\r\n    { threshold: 0.05 },\r\n    { threshold: 0.15 },\r\n    { threshold: 0.25 },\r\n    { threshold: 0.35 },\r\n    { threshold: 0.45 },\r\n    { threshold: 0.55 },\r\n    { threshold: 0.65 },\r\n    { threshold: 0.75 },\r\n    { threshold: 0.85 },\r\n    { threshold: 0.95 }\r\n];\r\n\r\nexport {rowsRes}\r\nexport {rowsThresh} ","\r\nfunction processRows(results, thresholds) {\r\n    let processedRows = [];\r\n    for (let i = 0; i < thresholds.length; i++) {\r\n        let TP = 0;\r\n        let FP = 0;\r\n        let TN = 0;\r\n        let FN = 0;\r\n        for (let j = 0; j < results.length; j++) {\r\n            if (results[j].state == 1) {\r\n                if (results[j].result >= thresholds[i].threshold) TP++;\r\n                else FN++;\r\n            } else {\r\n                if (results[j].result >= thresholds[i].threshold) FP++;\r\n                else TN++;\r\n            }\r\n        }\r\n        processedRows.push(new ProcessedRow(thresholds[i].threshold, TP, FP, TN, FN));\r\n    }\r\n    return (processedRows);\r\n}\r\n\r\nexport function prepareRocData(rawData) {\r\n    return rawData\r\n        .map((data) => {\r\n            let sp = 1 - data.specifity.toFixed(2);\r\n            let rc = data.recall.toFixed(2);\r\n            return { x: sp, y: parseFloat(rc) }\r\n        }\r\n        ).filter(row => !isNaN(row.x) && !isNaN(row.y))\r\n        .sort(compareRoc);\r\n}\r\n\r\nexport function prepareRpData(rawData) {\r\n    return rawData\r\n        .map((data) => {\r\n            let pr = data.precision.toFixed(2);\r\n            let rc = data.recall.toFixed(2);\r\n            return { x: parseFloat(rc), y: parseFloat(pr) }\r\n        }\r\n        ).filter(row => !isNaN(row.x) && !isNaN(row.y))\r\n        .sort(comparePr);\r\n}\r\n\r\nfunction compareRoc(a, b) {\r\n    if (a.x > b.x){\r\n        return 1;\r\n    }\r\n    else if (a.x < b.x) {\r\n        return -1;\r\n    }\r\n    else if (a.y > b.y) {\r\n            return 1;\r\n    }\r\n    else if (a.y < b.y) {\r\n            return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nfunction comparePr(a, b) {\r\n    if (a.x > b.x){\r\n        return 1;\r\n    }\r\n    else if (a.x < b.x) {\r\n        return -1;\r\n    }\r\n    else if (a.y > b.y) {\r\n        return -1;\r\n    }\r\n    else if (a.y < b.y) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nclass ProcessedRow {\r\n    constructor(threshold, TP, FP, TN, FN) {\r\n        this.threshold = parseFloat(threshold);\r\n        this.TP = TP;\r\n        this.FP = FP;\r\n        this.TN = TN;\r\n        this.FN = FN;\r\n        this.recall = TP / (TP + FN);\r\n        this.specifity = TN / (TN + FP);\r\n        this.precision = TP / (TP + FP);\r\n        this.dokladnosc = (TP + TN) / (TP + TN + FP + FN);\r\n        this.error = 1 - this.dokladnosc;\r\n        this.F1 = 2 * this.precision * this.recall / (this.precision + this.recall);\r\n    }\r\n}\r\n\r\nexport default processRows;\r\n","import React from \"react\"\r\nimport { ResponsiveContainer, LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Line, Label } from \"recharts\"\r\n\r\nfunction Chart(props) {\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <ResponsiveContainer width=\"100%\" height={280}>\r\n                <LineChart data={props.data}  margin={{ top: 5, right: 5, left: 5, bottom: 35 }}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey={\"x\"} domain={[0, 1]} type=\"number\" name={props.xLabel}>\r\n                        <Label value={props.xLabel} offset={-5} position=\"insideBottom\" />\r\n                    </XAxis>\r\n                    <YAxis domain={[0, 1]} type=\"number\">\r\n                        <Label value={props.yLabel} angle={-90} position=\"insideLeft\" />\r\n                    </YAxis>\r\n                    <Tooltip labelFormatter={(label) => props.xLabel + \": \" + label}/>\r\n                    <Line type=\"linear\"  dataKey=\"y\"  stroke=\"#874BBA\" strokeWidth=\"2\" name={props.yLabel} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from \"react\"\r\nimport { Table } from \"reactstrap\"\r\n\r\nimport \"./ErrorMatrix.css\"\r\n\r\nfunction renderHeader(row) {\r\n    return (\r\n        <tr >\r\n            <th >\r\n                {row.threshold}\r\n            </th>\r\n            <th >\r\n                {row.TP}\r\n            </th>\r\n            <th >\r\n                {row.FP}\r\n            </th>\r\n            <th >\r\n                {row.FN}\r\n            </th>\r\n            <th >\r\n                {row.TN}\r\n            </th>\r\n            <th >\r\n                {row.recall}\r\n            </th>\r\n            <th >\r\n                {row.specifity}\r\n            </th>\r\n            <th >\r\n                {row.precision}\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction renderRow(row) {\r\n    return (\r\n        <tr >\r\n            <td >\r\n                {row.threshold}\r\n            </td>\r\n            <td >\r\n                {row.TP}\r\n            </td>\r\n            <td >\r\n                {row.FP}\r\n            </td>\r\n            <td >\r\n                {row.FN}\r\n            </td>\r\n            <td >\r\n                {row.TN}\r\n            </td>\r\n            <td >\r\n                {formatFloat(row.recall)}\r\n            </td>\r\n            <td >\r\n                {formatFloat(row.specifity)}\r\n            </td>\r\n            <td >\r\n                {formatFloat(row.precision)}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction ErrorMatrix(props) {\r\n\r\n    let headers = {\r\n        threshold: \"Próg\", TP: \"Tp\", FP: \"Fp\", TN: \"Tn\", FN: \"Fn\",\r\n        recall: \"czułość\", specifity: \"swoistość\", precision: \"precyzja\"\r\n    }\r\n    let data = props.data;\r\n    data.sort((a, b) => a.threshold < b.threshold ? -1 : 1);\r\n    let content = data.map(row => renderRow(row));\r\n\r\n    return (\r\n        <div className=\"table-data-container\">\r\n            <Table>\r\n                <thead>\r\n                    {renderHeader(headers)}\r\n                </thead>\r\n\r\n                <tbody >\r\n\r\n                    {content}\r\n                </tbody>\r\n\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction formatFloat(val) {\r\n    return isNaN(val) ? \"-\" : val.toFixed(2);\r\n}\r\n\r\nexport default ErrorMatrix","\r\nfunction compareRows(a, b) {\r\n    if (a.state < b.state) return -1\r\n    else if (a.state > b.state) return 1\r\n    else if (a.result < b.result) return -1\r\n    else if (a.result > b.result) return 1\r\n    else return 0\r\n}\r\n\r\nfunction compareThreshold(a, b) {\r\n    if (a.threshold < b.threshold) return -1\r\n    else if (a.threshold > b.threshold) return 1\r\n    else return 0\r\n}\r\n\r\nfunction compareResults(a, b){\r\n    if (a.result < b.result) return -1\r\n    else if (a.result > b.result) return 1\r\n    else return 0\r\n}\r\n\r\nexport {compareRows}\r\nexport {compareResults}\r\nexport {compareThreshold} ","import React, { useState } from \"react\"\r\nimport { Button, Tooltip } from \"reactstrap\"\r\nfunction TooltipButton(props) {\r\n\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Button color={props.color} onClick={props.onClick} id={props.id}>{props.children}</Button>\r\n            <Tooltip placement=\"top\" isOpen={tooltipOpen} target={props.id} toggle={toggle}>\r\n                {props.tooltip}\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TooltipButton","import React from 'react';\r\nimport './App.css';\r\nimport {Col, Row, Container, Button} from \"reactstrap\";\r\nimport DataInput from \"./component/DataInput\";\r\nimport * as ExampleData from \"./resources/exampleData\";\r\nimport processRows, {prepareRocData, prepareRpData} from './DataProcessor';\r\nimport Chart from \"./component/Chart\"\r\nimport ErrorMatrix from './component/ErrorMatrix';\r\nimport {compareRows, compareResults, compareThreshold} from './utils';\r\nimport TooltipButton from \"./component/TooltipButton\"\r\n\r\nconst columnsRes = [{id: \"state\", display: \"Stan\", regex: \"^1|0$\"}, {\r\n    id: \"result\",\r\n    display: \"Wynik testu\",\r\n    regex: \"^0[.][0-9]+$|^1$|^0$\"\r\n}];\r\n\r\nconst columnsThresh = [{id: \"threshold\", display: \"Próg\", regex: \"(0[.][0-9]+)|1|0\"}];\r\n\r\nclass RocprDemo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {rowsResults: [...ExampleData.rowsRes], rowsThresholds: [...ExampleData.rowsThresh]};\r\n        this.resultsChangeHandler = this.resultsChangeHandler.bind(this);\r\n        this.thresholdsChangeHandler = this.thresholdsChangeHandler.bind(this);\r\n    }\r\n\r\n    resultsChangeHandler(rowsResults) {\r\n        this.setState({rowsResults: rowsResults});\r\n    }\r\n\r\n    thresholdsChangeHandler(rowsThresholds) {\r\n        this.setState({rowsThresholds: rowsThresholds});\r\n    }\r\n\r\n    fillExampleOnClickHandler = () => {\r\n        this.setState({rowsResults: [...ExampleData.rowsRes], rowsThresholds: [...ExampleData.rowsThresh]});\r\n    }\r\n\r\n    clearAllOnClickHandler = () => {\r\n        this.setState({rowsResults: [], rowsThresholds: []});\r\n    }\r\n\r\n    sortOnClickHandler = () => {\r\n        this.resultsChangeHandler(this.state.rowsResults.sort(compareRows))\r\n        this.thresholdsChangeHandler(this.state.rowsThresholds.sort(compareThreshold))\r\n    }\r\n\r\n    genThresholdOnClickHandler = () => {\r\n        var current = 0;\r\n        var thresholds = [];\r\n        let max = 1;\r\n        let rows = this.state.rowsResults.slice().sort(compareResults)\r\n        if (rows.length === 0) return\r\n        if (rows[0].result == 0) thresholds.push({threshold: 0})\r\n        for (var i = 0; i < rows.length; i++) {\r\n            if (rows[i].result > current) {\r\n                thresholds.push({threshold: ((rows[i].result + current) / 2).toFixed(2)})\r\n            }\r\n            current = rows[i].result\r\n        }\r\n        thresholds.push({threshold: ((current + max) / 2).toFixed(2)})\r\n        this.setState({rowsThresholds: thresholds});\r\n    }\r\n\r\n    render() {\r\n\r\n        var data = processRows(this.state.rowsResults, this.state.rowsThresholds);\r\n        let rocData = prepareRocData(data);\r\n        let rpData = prepareRpData(data);\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row className=\"mb-3 justify-content-center\">\r\n                    <Col xs={{size: \"auto\"}}>\r\n                        <TooltipButton color=\"primary\" onClick={this.fillExampleOnClickHandler}\r\n                                       tooltip=\"Wstawia przykładowe dane wartości wejściowych oraz progów\"\r\n                                       id=\"insertData\">\r\n                            Wstaw przykładowe dane\r\n                        </TooltipButton>\r\n                    </Col>\r\n                    <Col xs={{size: \"auto\"}}>\r\n                        <TooltipButton color=\"danger\" onClick={this.clearAllOnClickHandler}\r\n                                       tooltip=\"Usuwa wszystkie dane wejściowe i progi\" id=\"removeData\">\r\n                            Usuń wszystkie dane\r\n                        </TooltipButton>\r\n                    </Col>\r\n                    <Col xs={{size: \"auto\"}}>\r\n                        <TooltipButton color=\"secondary\" onClick={this.genThresholdOnClickHandler}\r\n                                       tooltip=\"Generuje wartości progów (produkujące wszystkie możliwe TP, FP, TN, FN) na podstawie podanych stanów\" id=\"genThreshold\">\r\n                            Generuj progi\r\n                        </TooltipButton>\r\n                    </Col>\r\n                    <Col xs={{size: \"auto\"}}>\r\n                        <TooltipButton color=\"info\" onClick={this.sortOnClickHandler}\r\n                                       tooltip=\"Sortuje dane wejściowe oraz progi\" id=\"sort\">\r\n                            Sortuj\r\n                        </TooltipButton>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"text-center justify-content-around\">\r\n                    <Col md=\"4\">\r\n                        <Row>\r\n                            <Col xl=\"7\" className=\"mb-4\">\r\n                                <h5>Dane wejściowe</h5>\r\n                                <DataInput columns={columnsRes} rows={this.state.rowsResults}\r\n                                           parentHandler={this.resultsChangeHandler}/>\r\n                            </Col>\r\n                            <Col xl=\"5\" className=\"mb-4\">\r\n                                <h5>Progi</h5>\r\n                                <DataInput columns={columnsThresh} rows={this.state.rowsThresholds}\r\n                                           parentHandler={this.thresholdsChangeHandler}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col md=\"8\">\r\n                        <Row className=\"text-center\">\r\n                            <Col md=\"12\" className=\"mb-4\">\r\n                                <h5>Macierz pomyłek</h5>\r\n                                <ErrorMatrix data={data}/>\r\n                            </Col>\r\n                            <Col md=\"6\" className=\"mb-4\">\r\n                                <h5>Krzywa ROC</h5>\r\n                                <Chart data={rocData} xLabel=\"1 - swoistość\" yLabel=\"czułość\"/>\r\n                            </Col>\r\n                            <Col md=\"6\" className=\"mb-4\">\r\n                                <h5>Krzywa PR</h5>\r\n                                <Chart data={rpData} xLabel=\"czułość\" yLabel=\"precyzja\"/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RocprDemo;","import React from \"react\"\r\nimport { Container, Row, Col } from \"reactstrap\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer font-small fixed-bottom bg-secondary text-light\">\r\n            <Container fluid>\r\n                <Row className=\"justify-content-between align-items-end\">\r\n                    <Col className=\"p-1\">\r\n                        MBI 19Z\r\n                    </Col>\r\n                    <Col className=\"p-1 text-right\">\r\n                        Michał Grzeszczyk\r\n                        <br />\r\n                        Przemysław Wilczyński\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport { Jumbotron } from \"reactstrap\"\r\nimport RocprDemo from \"./RocprDemo\"\r\nimport './App.css';\r\nimport Footer from './component/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Jumbotron fluid className=\"text-center header\">\r\n        <h2>Wykreślanie krzywej ROC i PR</h2>\r\n      </Jumbotron>\r\n      <RocprDemo />\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}